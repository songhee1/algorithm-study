import java.io.*;
import java.util.*;
class Solution5 {
	static int N;
	static int ans = Integer.MIN_VALUE;
	static List<Character> op = new ArrayList<>();
	static List<Integer> num = new ArrayList<>();
	public static void main(String[] args) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	StringTokenizer st;
    	StringBuilder sb = new StringBuilder();

    	N = Integer.parseInt(br.readLine());
    	String s = br.readLine();
    	
    	for(int i=0;i<s.length();i++) {
    		if(i%2 == 0) {
    			num.add(Character.getNumericValue(s.charAt(i)));
    		}else {
    			op.add(s.charAt(i));
    		}
    	}
    	
    	dfs(0, num.get(0));
    	
    	System.out.println(ans);
    }
	private static void dfs(int opIndex, int result) {
		if(opIndex == op.size()) {
			ans = Math.max(ans, result);
			return;
		}
		
		//괄호 없는 경우
		int res = calcul(op.get(opIndex), result, num.get(opIndex+1));
		dfs(opIndex+1, res);
		
		//괄호 있는 경우
		if(opIndex+1<op.size()) {
			int res1 = calcul(op.get(opIndex+1), num.get(opIndex+1), num.get(opIndex+2));
			int res2 = calcul(op.get(opIndex), result, res1);
			dfs(opIndex+2, res2);
		}
	}
	private static int calcul(char op, int num1, int num2) {
		if(op == '+') {
			return num1+num2;
		}else if(op == '-') {
			return num1-num2;
		}else {
			return num1*num2;
		}
	}
	
}
